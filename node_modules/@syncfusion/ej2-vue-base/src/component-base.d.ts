export declare const isExecute: boolean, aVue: any, gh: any;
export declare let vueDefineComponent: (options: any) => any;
declare type ComponentBase = {
    getInjectedServices(): Object[];
    updated(): void;
    bindProperties(): void;
    assignValueToWrapper(option: Object, silent?: boolean): void;
    fetchChildPropValues(childOption: Object): void;
    getDirectiveValues(tagDirectives: any, tagMapper: {
        [key: string]: Object;
    }, tagNameMapper: Object): Object;
    getMultiLevelDirValue(tagDirectories: any, tagKey: string | Object, tagNameMapper: Object): Object;
    getVNodeValue(tagDirective: any, tagKey: string | Object, tagNameMapper: Object): Object;
    /**
     * convert kebab case directive props to camel case
     */
    getCamelCaseProps(props: Object): Object;
    dataBind(): void;
};
export declare let ComponentBase: ComponentBase;
export declare function getProps(options?: any): any;
export {};
